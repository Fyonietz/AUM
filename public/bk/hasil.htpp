<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Hasil</title>
</head>
<body>

<div class="register-user">
  <h1 id="toggleRegister">Hasil AUM</h1>

  <div id="registerForm" class="register-form">
    <input type="text" name="nama" id="nama" placeholder="Nama">

    <select name="Kelas" id="Kelas">
      <option value="X TJKT 1">X TJKT 1</option>
      <option value="X TJKT 2">X TJKT 2</option>
      <option value="X TJKT 3">X TJKT 3</option>
      <option value="X TJKT 4">X TJKT 4</option>
      <option value="X DKV 1">X DKV 1</option>
      <option value="X DKV 2">X DKV 2</option>
      <option value="X RPL 1">X RPL 1</option>
      <option value="X RPL 2">X RPL 2</option>
      <option value="X BC">X BC</option>
   
    </select>

    <div class="btn-place">
      <button id="save_user" onclick="cari()">Cari</button>
      <button onclick="window.location.href='/dashboard'" id="cancel">Cancel</button>
    </div>
  </div>
</div>

<div id="hasilContainer"></div>

<script>
async function cari() {
  const namaInput = document.getElementById("nama").value.trim().toLowerCase();
  const kelasInput = document.getElementById("Kelas").value;
  const hasilContainer = document.getElementById("hasilContainer");

  try {
    const response = await fetch("/api/hasil");
    const data = await response.json();

    // Filter data based on input
    const hasilFiltered = data.filter(item =>
      item.nama.toLowerCase() === namaInput && item.kelas === kelasInput
    );

    if (hasilFiltered.length === 0) {
      hasilContainer.innerHTML = "<p>Tidak ada data ditemukan.</p>";
      return;
    }

    const nama = hasilFiltered[0].nama;
    const kelas = hasilFiltered[0].kelas;
    const jumlahItem = hasilFiltered.length;
    const skor = jumlahItem * 5;

    // Count each kategori
    const kategoriCount = {};
    hasilFiltered.forEach(item => {
      const kategori = item.soal_masalah_kategori;
      kategoriCount[kategori] = (kategoriCount[kategori] || 0) + 1;
    });

    // Build result HTML
    let html = `<h2>Nama: ${nama}</h2>`;
    html += `<h3>Kelas: ${kelas}</h3>`;
    html += `<p><strong>Jumlah Item:</strong> ${jumlahItem}</p>`;
    html += `<p><strong>Skor:</strong> ${skor}</p>`;

    html += `<h3>Detail Jawaban</h3>`;
    html += `<table border="1" cellpadding="8" cellspacing="0">
               <tr>
                 <th>Nomor</th>
                 <th>Kategori</th>
               </tr>`;
    hasilFiltered.forEach(item => {
      html += `<tr>
                 <td>${item.soal_masalah_id}</td>
                 <td>${item.soal_masalah_kategori}</td>
               </tr>`;
    });
    html += `</table>`;

    // Show count per kategori
    html += `<h3>Rekapitulasi Kategori</h3>`;
    html += `<table border="1" cellpadding="8" cellspacing="0">
               <tr>
                 <th>Kategori</th>
                 <th>Jumlah Dipilih</th>
               </tr>`;
    for (const kategori in kategoriCount) {
      html += `<tr>
                 <td>${kategori}</td>
                 <td>${kategoriCount[kategori]}</td>
               </tr>`;
    }
    html += `</table>`;

    hasilContainer.innerHTML = html;

  } catch (error) {
    console.error("Error fetching data:", error);
    hasilContainer.innerHTML = "<p>Terjadi kesalahan saat mengambil data.</p>";
  }
}


</script>

</body>
</html>
